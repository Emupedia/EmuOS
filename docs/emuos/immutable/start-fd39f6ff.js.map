{"version":3,"mappings":"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","names":["HttpError","status","message","__publicField","Redirect","location","normalize_path","path","trailing_slash","decode_params","params","key","tracked_url_properties","make_trackable","url","callback","tracked","property","value","depth","opts","inspect","disable_hash","hash","i","native_fetch","initial_fetch","resource","selector","script","init","body","param_pattern","parse_route_id","id","names","types","add_trailing_slash","count_occurrences","affects_path","segment","segments","decoded_segment","match","is_last","content","name","type","rest","exec","matchers","matcher","needle","haystack","count","parse","nodes","dictionary","leaf","layouts","errors","uses_server_data","route","pattern","n","error","ctx","switch_value","insert_hydration","target","afterUpdate","stores","navigated","title","mounted","$$invalidate","unsubscribe","page","SCROLL_KEY","INDEX_KEY","routes","default_layout_loader","default_error_loader","scroll_positions","update_scroll_positions","index","scroll_state","create_client","invalidated","load_cache","callbacks","current","started","autoscroll","updating","session_id","invalidating","root","router_enabled","current_history_index","_a","scroll","hash_navigating","token","goto","redirect_chain","get_base_uri","navigate","noscroll","native_navigation","prefetch","intent","get_navigation_intent","load_route","update","current_token","navigation_result","load_root_error_page","_b","change","details","initialize","keepfocus","tabindex","tick","deep_linked","leaf_node","_c","result","style","Root","navigation","fn","get_navigation_result_from_branch","filtered","branch","branch_node","validation_errors","data","data_changed","node","print_error","replacement","load_node","uses","loader","depends","deps","dep","href","uses_params","load_input","requested","normalized","parent","server_data_node","_d","_e","has_changed","changed","parent_changed","param","create_data_node","previous","loaders","server_data","invalid_server_nodes","acc","invalid","res","x","server_data_nodes","branch_promises","j","p","e","error_loaded","root_layout","root_error","base","from","should_block","blocked","accepted","onMount","pathnames","promises","pathname","r","load","trigger_prefetch","event","a","find_anchor","get_href","mousemove_timeout","handle_mousemove","is_svg_a_element","rel","delta","link","fallback","node_ids","set_public_env","environment","start","client","paths","set_paths","hydrate","spa"],"sources":["../../../../../node_modules/@sveltejs/kit/src/index/private.js","../../../../../node_modules/@sveltejs/kit/src/utils/url.js","../../../../../node_modules/@sveltejs/kit/src/runtime/hash.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/fetcher.js","../../../../../node_modules/@sveltejs/kit/src/utils/routing.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/parse.js","../../../../../node_modules/@sveltejs/kit/src/index/index.js","../../../../generated/root.svelte","../../../../generated/client-matchers.js","../../../../generated/client-manifest.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/client.js","../../../../../node_modules/@sveltejs/kit/src/runtime/env-public.js","../../../../../node_modules/@sveltejs/kit/src/runtime/client/start.js"],"sourcesContent":["export class HttpError {\n\t// without these, things like `$page.error.stack` will error. we don't want to\n\t// include a stack for these sorts of errors, but we also don't want red\n\t// squigglies everywhere, so this feels like a not-terribile compromise\n\tname = 'HttpError';\n\n\t/** @type {void} */\n\tstack = undefined;\n\n\t/**\n\t * @param {number} status\n\t * @param {string | undefined} message\n\t */\n\tconstructor(status, message) {\n\t\tthis.status = status;\n\t\tthis.message = message ?? `Error: ${status}`;\n\t}\n\n\ttoString() {\n\t\treturn this.message;\n\t}\n}\n\nexport class Redirect {\n\t/**\n\t * @param {number} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n}\n","const absolute = /^([a-z]+:)?\\/?\\//;\nconst scheme = /^[a-z]+:/;\n\n/**\n * @param {string} base\n * @param {string} path\n */\nexport function resolve(base, path) {\n\tif (scheme.test(path)) return path;\n\n\tconst base_match = absolute.exec(base);\n\tconst path_match = absolute.exec(path);\n\n\tif (!base_match) {\n\t\tthrow new Error(`bad base path: \"${base}\"`);\n\t}\n\n\tconst baseparts = path_match ? [] : base.slice(base_match[0].length).split('/');\n\tconst pathparts = path_match ? path.slice(path_match[0].length).split('/') : path.split('/');\n\n\tbaseparts.pop();\n\n\tfor (let i = 0; i < pathparts.length; i += 1) {\n\t\tconst part = pathparts[i];\n\t\tif (part === '.') continue;\n\t\telse if (part === '..') baseparts.pop();\n\t\telse baseparts.push(part);\n\t}\n\n\tconst prefix = (path_match && path_match[0]) || (base_match && base_match[0]) || '';\n\n\treturn `${prefix}${baseparts.join('/')}`;\n}\n\n/** @param {string} path */\nexport function is_root_relative(path) {\n\treturn path[0] === '/' && path[1] !== '/';\n}\n\n/**\n * @param {string} path\n * @param {import('types').TrailingSlash} trailing_slash\n */\nexport function normalize_path(path, trailing_slash) {\n\tif (path === '/' || trailing_slash === 'ignore') return path;\n\n\tif (trailing_slash === 'never') {\n\t\treturn path.endsWith('/') ? path.slice(0, -1) : path;\n\t} else if (trailing_slash === 'always' && !path.endsWith('/')) {\n\t\treturn path + '/';\n\t}\n\n\treturn path;\n}\n\n/** @param {Record<string, string>} params */\nexport function decode_params(params) {\n\tfor (const key in params) {\n\t\t// input has already been decoded by decodeURI\n\t\t// now handle the rest that decodeURIComponent would do\n\t\tparams[key] = params[key]\n\t\t\t.replace(/%23/g, '#')\n\t\t\t.replace(/%3[Bb]/g, ';')\n\t\t\t.replace(/%2[Cc]/g, ',')\n\t\t\t.replace(/%2[Ff]/g, '/')\n\t\t\t.replace(/%3[Ff]/g, '?')\n\t\t\t.replace(/%3[Aa]/g, ':')\n\t\t\t.replace(/%40/g, '@')\n\t\t\t.replace(/%26/g, '&')\n\t\t\t.replace(/%3[Dd]/g, '=')\n\t\t\t.replace(/%2[Bb]/g, '+')\n\t\t\t.replace(/%24/g, '$');\n\t}\n\n\treturn params;\n}\n\n/**\n * URL properties that could change during the lifetime of the page,\n * which excludes things like `origin`\n * @type {Array<keyof URL>}\n */\nconst tracked_url_properties = ['href', 'pathname', 'search', 'searchParams', 'toString', 'toJSON'];\n\n/**\n * @param {URL} url\n * @param {() => void} callback\n */\nexport function make_trackable(url, callback) {\n\tconst tracked = new URL(url);\n\n\tfor (const property of tracked_url_properties) {\n\t\tlet value = tracked[property];\n\n\t\tObject.defineProperty(tracked, property, {\n\t\t\tget() {\n\t\t\t\tcallback();\n\t\t\t\treturn value;\n\t\t\t},\n\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true\n\t\t});\n\t}\n\n\t// @ts-ignore\n\ttracked[Symbol.for('nodejs.util.inspect.custom')] = (depth, opts, inspect) => {\n\t\treturn inspect(url, opts);\n\t};\n\n\tdisable_hash(tracked);\n\n\treturn tracked;\n}\n\n/**\n * Disallow access to `url.hash` on the server and in `load`\n * @param {URL} url\n */\nexport function disable_hash(url) {\n\tObject.defineProperty(url, 'hash', {\n\t\tget() {\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot access event.url.hash. Consider using `$page.url.hash` inside a component instead'\n\t\t\t);\n\t\t}\n\t});\n}\n\n/**\n * Disallow access to `url.search` and `url.searchParams` during prerendering\n * @param {URL} url\n */\nexport function disable_search(url) {\n\tfor (const property of ['search', 'searchParams']) {\n\t\tObject.defineProperty(url, property, {\n\t\t\tget() {\n\t\t\t\tthrow new Error(`Cannot access url.${property} on a page with prerendering enabled`);\n\t\t\t}\n\t\t});\n\t}\n}\n","/**\n * Hash using djb2\n * @param {import('types').StrictBody} value\n */\nexport function hash(value) {\n\tlet hash = 5381;\n\tlet i = value.length;\n\n\tif (typeof value === 'string') {\n\t\twhile (i) hash = (hash * 33) ^ value.charCodeAt(--i);\n\t} else {\n\t\twhile (i) hash = (hash * 33) ^ value[--i];\n\t}\n\n\treturn (hash >>> 0).toString(36);\n}\n","import { hash } from '../hash.js';\n\nlet loading = 0;\n\nexport const native_fetch = window.fetch;\n\nexport function lock_fetch() {\n\tloading += 1;\n}\n\nexport function unlock_fetch() {\n\tloading -= 1;\n}\n\nif (import.meta.env.DEV) {\n\tlet can_inspect_stack_trace = false;\n\n\tconst check_stack_trace = async () => {\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\t\tcan_inspect_stack_trace = stack.includes('check_stack_trace');\n\t};\n\n\tcheck_stack_trace();\n\n\twindow.fetch = (input, init) => {\n\t\tconst url = input instanceof Request ? input.url : input.toString();\n\t\tconst stack = /** @type {string} */ (new Error().stack);\n\n\t\tconst heuristic = can_inspect_stack_trace ? stack.includes('load_node') : loading;\n\t\tif (heuristic) {\n\t\t\tconsole.warn(\n\t\t\t\t`Loading ${url} using \\`window.fetch\\`. For best results, use the \\`fetch\\` that is passed to your \\`load\\` function: https://kit.svelte.dev/docs/load#input-fetch`\n\t\t\t);\n\t\t}\n\n\t\treturn native_fetch(input, init);\n\t};\n}\n\n/**\n * @param {RequestInfo} resource\n * @param {RequestInit} [opts]\n */\nexport function initial_fetch(resource, opts) {\n\tconst url = JSON.stringify(typeof resource === 'string' ? resource : resource.url);\n\n\tlet selector = `script[sveltekit\\\\:data-type=\"data\"][sveltekit\\\\:data-url=${url}]`;\n\n\tif (opts && typeof opts.body === 'string') {\n\t\tselector += `[sveltekit\\\\:data-body=\"${hash(opts.body)}\"]`;\n\t}\n\n\tconst script = document.querySelector(selector);\n\tif (script && script.textContent) {\n\t\tconst { body, ...init } = JSON.parse(script.textContent);\n\t\treturn Promise.resolve(new Response(body, init));\n\t}\n\n\treturn native_fetch(resource, opts);\n}\n","const param_pattern = /^(\\.\\.\\.)?(\\w+)(?:=(\\w+))?$/;\n\n/** @param {string} id */\nexport function parse_route_id(id) {\n\t/** @type {string[]} */\n\tconst names = [];\n\n\t/** @type {string[]} */\n\tconst types = [];\n\n\t// `/foo` should get an optional trailing slash, `/foo.json` should not\n\t// const add_trailing_slash = !/\\.[a-z]+$/.test(key);\n\tlet add_trailing_slash = true;\n\n\tif (/\\]\\[/.test(id)) {\n\t\tthrow new Error(`Invalid route ${id} — parameters must be separated`);\n\t}\n\n\tif (count_occurrences('[', id) !== count_occurrences(']', id)) {\n\t\tthrow new Error(`Invalid route ${id} — brackets are unbalanced`);\n\t}\n\n\tconst pattern =\n\t\tid === ''\n\t\t\t? /^\\/$/\n\t\t\t: new RegExp(\n\t\t\t\t\t`^${id\n\t\t\t\t\t\t.split(/(?:\\/|$)/)\n\t\t\t\t\t\t.filter(affects_path)\n\t\t\t\t\t\t.map((segment, i, segments) => {\n\t\t\t\t\t\t\tconst decoded_segment = decodeURIComponent(segment);\n\t\t\t\t\t\t\t// special case — /[...rest]/ could contain zero segments\n\t\t\t\t\t\t\tconst match = /^\\[\\.\\.\\.(\\w+)(?:=(\\w+))?\\]$/.exec(decoded_segment);\n\t\t\t\t\t\t\tif (match) {\n\t\t\t\t\t\t\t\tnames.push(match[1]);\n\t\t\t\t\t\t\t\ttypes.push(match[2]);\n\t\t\t\t\t\t\t\treturn '(?:/(.*))?';\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst is_last = i === segments.length - 1;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\tdecoded_segment &&\n\t\t\t\t\t\t\t\t'/' +\n\t\t\t\t\t\t\t\t\tdecoded_segment\n\t\t\t\t\t\t\t\t\t\t.split(/\\[(.+?)\\]/)\n\t\t\t\t\t\t\t\t\t\t.map((content, i) => {\n\t\t\t\t\t\t\t\t\t\t\tif (i % 2) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst match = param_pattern.exec(content);\n\t\t\t\t\t\t\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t`Invalid param: ${content}. Params and matcher names can only have underscores and alphanumeric characters.`\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t\tconst [, rest, name, type] = match;\n\t\t\t\t\t\t\t\t\t\t\t\tnames.push(name);\n\t\t\t\t\t\t\t\t\t\t\t\ttypes.push(type);\n\t\t\t\t\t\t\t\t\t\t\t\treturn rest ? '(.*?)' : '([^/]+?)';\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tif (is_last && content.includes('.')) add_trailing_slash = false;\n\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\tcontent // allow users to specify characters on the file system in an encoded manner\n\t\t\t\t\t\t\t\t\t\t\t\t\t.normalize()\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We use [ and ] to denote parameters, so users must encode these on the file\n\t\t\t\t\t\t\t\t\t\t\t\t\t// system to match against them. We don't decode all characters since others\n\t\t\t\t\t\t\t\t\t\t\t\t\t// can already be epressed and so that '%' can be easily used directly in filenames\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Bb]/g, '[')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/%5[Dd]/g, ']')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// '#', '/', and '?' can only appear in URL path segments in an encoded manner.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// They will not be touched by decodeURI so need to be encoded here, so\n\t\t\t\t\t\t\t\t\t\t\t\t\t// that we can match against them.\n\t\t\t\t\t\t\t\t\t\t\t\t\t// We skip '/' since you can't create a file with it on any OS\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/#/g, '%23')\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/\\?/g, '%3F')\n\t\t\t\t\t\t\t\t\t\t\t\t\t// escape characters that have special meaning in regex\n\t\t\t\t\t\t\t\t\t\t\t\t\t.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\t\t\t\t\t\t\t\t\t\t\t); // TODO handle encoding\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t.join('')\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join('')}${add_trailing_slash ? '/?' : ''}$`\n\t\t\t  );\n\n\treturn { pattern, names, types };\n}\n\n/**\n * Returns `false` for `(group)` segments\n * @param {string} segment\n */\nexport function affects_path(segment) {\n\treturn !/^\\([^)]+\\)$/.test(segment);\n}\n\n/**\n * Turns a route ID into a path, if possible\n * @param {string} id\n */\nexport function get_path(id) {\n\tif (id.includes('[')) return null;\n\treturn `/${id.split('/').filter(affects_path).join('/')}`;\n}\n\n/**\n * @param {RegExpMatchArray} match\n * @param {string[]} names\n * @param {string[]} types\n * @param {Record<string, import('types').ParamMatcher>} matchers\n */\nexport function exec(match, names, types, matchers) {\n\t/** @type {Record<string, string>} */\n\tconst params = {};\n\n\tfor (let i = 0; i < names.length; i += 1) {\n\t\tconst name = names[i];\n\t\tconst type = types[i];\n\t\tconst value = match[i + 1] || '';\n\n\t\tif (type) {\n\t\t\tconst matcher = matchers[type];\n\t\t\tif (!matcher) throw new Error(`Missing \"${type}\" param matcher`); // TODO do this ahead of time?\n\n\t\t\tif (!matcher(value)) return;\n\t\t}\n\n\t\tparams[name] = value;\n\t}\n\n\treturn params;\n}\n\n/**\n * @param {string} needle\n * @param {string} haystack\n */\nfunction count_occurrences(needle, haystack) {\n\tlet count = 0;\n\tfor (let i = 0; i < haystack.length; i += 1) {\n\t\tif (haystack[i] === needle) count += 1;\n\t}\n\treturn count;\n}\n","import { exec, parse_route_id } from '../../utils/routing.js';\n\n/**\n * @param {import('types').CSRPageNodeLoader[]} nodes\n * @param {typeof import('__GENERATED__/client-manifest.js').dictionary} dictionary\n * @param {Record<string, (param: string) => boolean>} matchers\n * @returns {import('types').CSRRoute[]}\n */\nexport function parse(nodes, dictionary, matchers) {\n\treturn Object.entries(dictionary).map(([id, [leaf, layouts, errors]]) => {\n\t\tconst { pattern, names, types } = parse_route_id(id);\n\n\t\t// whether or not the route uses the server data is\n\t\t// encoded using the ones' complement, to save space\n\t\tconst uses_server_data = leaf < 0;\n\t\tif (uses_server_data) leaf = ~leaf;\n\n\t\tconst route = {\n\t\t\tid,\n\t\t\t/** @param {string} path */\n\t\t\texec: (path) => {\n\t\t\t\tconst match = pattern.exec(path);\n\t\t\t\tif (match) return exec(match, names, types, matchers);\n\t\t\t},\n\t\t\terrors: [1, ...(errors || [])].map((n) => nodes[n]),\n\t\t\tlayouts: [0, ...(layouts || [])].map((n) => nodes[n]),\n\t\t\tleaf: nodes[leaf],\n\t\t\tuses_server_data\n\t\t};\n\n\t\t// bit of a hack, but ensures that layout/error node lists are the same\n\t\t// length, without which the wrong data will be applied if the route\n\t\t// manifest looks like `[[a, b], [c,], d]`\n\t\troute.errors.length = route.layouts.length = Math.max(\n\t\t\troute.errors.length,\n\t\t\troute.layouts.length\n\t\t);\n\n\t\treturn route;\n\t});\n}\n","import { HttpError, Redirect } from './private.js';\n\n/**\n * Creates an `HttpError` object with an HTTP status code and an optional message.\n * This object, if thrown during request handling, will cause SvelteKit to\n * return an error response without invoking `handleError`\n * @param {number} status\n * @param {string | undefined} [message]\n */\nexport function error(status, message) {\n\treturn new HttpError(status, message);\n}\n\n/**\n * Creates a `Redirect` object. If thrown during request handling, SvelteKit will\n * return a redirect response.\n * @param {number} status\n * @param {string} location\n */\nexport function redirect(status, location) {\n\tif (isNaN(status) || status < 300 || status > 399) {\n\t\tthrow new Error('Invalid status code');\n\t}\n\n\treturn new Redirect(status, location);\n}\n\n/**\n * Generates a JSON `Response` object from the supplied data.\n * @param {any} data\n * @param {ResponseInit} [init]\n */\nexport function json(data, init) {\n\t// TODO deprecate this in favour of `Response.json` when it's\n\t// more widely supported\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-type')) {\n\t\theaders.set('content-type', 'application/json');\n\t}\n\n\treturn new Response(JSON.stringify(data), {\n\t\t...init,\n\t\theaders\n\t});\n}\n","<!-- This file is generated by @sveltejs/kit — do not edit it! -->\n<script>\n\timport { setContext, afterUpdate, onMount } from 'svelte';\n\timport { browser } from '$app/env';\n\n\t// stores\n\texport let stores;\n\texport let page;\n\n\texport let components;\n\texport let data_0 = null;\n\texport let data_1 = null;\n\texport let errors;\n\n\tif (!browser) {\n\t\tsetContext('__svelte__', stores);\n\t}\n\n\t$: stores.page.set(page);\n\tafterUpdate(stores.page.notify);\n\n\tlet mounted = false;\n\tlet navigated = false;\n\tlet title = null;\n\n\tonMount(() => {\n\t\tconst unsubscribe = stores.page.subscribe(() => {\n\t\t\tif (mounted) {\n\t\t\t\tnavigated = true;\n\t\t\t\ttitle = document.title || 'untitled page';\n\t\t\t}\n\t\t});\n\n\t\tmounted = true;\n\t\treturn unsubscribe;\n\t});\n</script>\n\n{#if components[1]}\n\t<svelte:component this={components[0]} data={data_0} {errors}>\n\t\t<svelte:component this={components[1]} data={data_1}/>\n\t</svelte:component>\n{:else}\n\t<svelte:component this={components[0]} data={data_0} {errors} />\n{/if}\n\n{#if mounted}\n\t<div id=\"svelte-announcer\" aria-live=\"assertive\" aria-atomic=\"true\" style=\"position: absolute; left: 0; top: 0; clip: rect(0 0 0 0); clip-path: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1px\">\n\t\t{#if navigated}\n\t\t\t{title}\n\t\t{/if}\n\t</div>\n{/if}","export const matchers = {};","export { matchers } from './client-matchers.js';\n\nexport const nodes = [\n\t() => import('./nodes/0'),\n\t() => import('./nodes/1'),\n\t() => import('./nodes/2'),\n\t() => import('./nodes/3')\n];\n\nexport const dictionary = {\n\t\"\": [2],\n\t\"test\": [3]\n};","import { onMount, tick } from 'svelte';\nimport { normalize_error } from '../../utils/error.js';\nimport { make_trackable, decode_params, normalize_path } from '../../utils/url.js';\nimport { find_anchor, get_base_uri, get_href, scroll_state } from './utils.js';\nimport { lock_fetch, unlock_fetch, initial_fetch, native_fetch } from './fetcher.js';\nimport { parse } from './parse.js';\nimport { error } from '../../index/index.js';\n\nimport Root from '__GENERATED__/root.svelte';\nimport { nodes, dictionary, matchers } from '__GENERATED__/client-manifest.js';\nimport { HttpError, Redirect } from '../../index/private.js';\nimport { stores } from './singletons.js';\n\nconst SCROLL_KEY = 'sveltekit:scroll';\nconst INDEX_KEY = 'sveltekit:index';\n\nconst routes = parse(nodes, dictionary, matchers);\n\nconst default_layout_loader = nodes[0];\nconst default_error_loader = nodes[1];\n\n// we import the root layout/error nodes eagerly, so that\n// connectivity errors after initialisation don't nuke the app\ndefault_layout_loader();\ndefault_error_loader();\n\n// We track the scroll position associated with each history entry in sessionStorage,\n// rather than on history.state itself, because when navigation is driven by\n// popstate it's too late to update the scroll position associated with the\n// state we're navigating from\n\n/** @typedef {{ x: number, y: number }} ScrollPosition */\n/** @type {Record<number, ScrollPosition>} */\nlet scroll_positions = {};\ntry {\n\tscroll_positions = JSON.parse(sessionStorage[SCROLL_KEY]);\n} catch {\n\t// do nothing\n}\n\n/** @param {number} index */\nfunction update_scroll_positions(index) {\n\tscroll_positions[index] = scroll_state();\n}\n\n/**\n * @param {{\n *   target: Element;\n *   base: string;\n *   trailing_slash: import('types').TrailingSlash;\n * }} opts\n * @returns {import('./types').Client}\n */\nexport function create_client({ target, base, trailing_slash }) {\n\t/** @type {Array<((href: string) => boolean)>} */\n\tconst invalidated = [];\n\n\t/** @type {{id: string | null, promise: Promise<import('./types').NavigationResult | undefined> | null}} */\n\tconst load_cache = {\n\t\tid: null,\n\t\tpromise: null\n\t};\n\n\tconst callbacks = {\n\t\t/** @type {Array<(opts: { from: URL, to: URL | null, cancel: () => void }) => void>} */\n\t\tbefore_navigate: [],\n\n\t\t/** @type {Array<(opts: { from: URL | null, to: URL }) => void>} */\n\t\tafter_navigate: []\n\t};\n\n\t/** @type {import('./types').NavigationState} */\n\tlet current = {\n\t\tbranch: [],\n\t\terror: null,\n\t\tsession_id: 0,\n\t\t// @ts-ignore - we need the initial value to be null\n\t\turl: null\n\t};\n\n\tlet started = false;\n\tlet autoscroll = true;\n\tlet updating = false;\n\tlet session_id = 1;\n\n\t/** @type {Promise<void> | null} */\n\tlet invalidating = null;\n\n\t/** @type {import('svelte').SvelteComponent} */\n\tlet root;\n\n\tlet router_enabled = true;\n\n\t// keeping track of the history index in order to prevent popstate navigation events if needed\n\tlet current_history_index = history.state?.[INDEX_KEY];\n\n\tif (!current_history_index) {\n\t\t// we use Date.now() as an offset so that cross-document navigations\n\t\t// within the app don't result in data loss\n\t\tcurrent_history_index = Date.now();\n\n\t\t// create initial history entry, so we can return here\n\t\thistory.replaceState(\n\t\t\t{ ...history.state, [INDEX_KEY]: current_history_index },\n\t\t\t'',\n\t\t\tlocation.href\n\t\t);\n\t}\n\n\t// if we reload the page, or Cmd-Shift-T back to it,\n\t// recover scroll position\n\tconst scroll = scroll_positions[current_history_index];\n\tif (scroll) {\n\t\thistory.scrollRestoration = 'manual';\n\t\tscrollTo(scroll.x, scroll.y);\n\t}\n\n\tlet hash_navigating = false;\n\n\t/** @type {import('types').Page} */\n\tlet page;\n\n\t/** @type {{}} */\n\tlet token;\n\n\t/**\n\t * @param {string | URL} url\n\t * @param {{ noscroll?: boolean; replaceState?: boolean; keepfocus?: boolean; state?: any }} opts\n\t * @param {string[]} redirect_chain\n\t */\n\tasync function goto(\n\t\turl,\n\t\t{ noscroll = false, replaceState = false, keepfocus = false, state = {} },\n\t\tredirect_chain\n\t) {\n\t\tif (typeof url === 'string') {\n\t\t\turl = new URL(url, get_base_uri(document));\n\t\t}\n\n\t\tif (router_enabled) {\n\t\t\treturn navigate({\n\t\t\t\turl,\n\t\t\t\tscroll: noscroll ? scroll_state() : null,\n\t\t\t\tkeepfocus,\n\t\t\t\tredirect_chain,\n\t\t\t\tdetails: {\n\t\t\t\t\tstate,\n\t\t\t\t\treplaceState\n\t\t\t\t},\n\t\t\t\taccepted: () => {},\n\t\t\t\tblocked: () => {}\n\t\t\t});\n\t\t}\n\n\t\tawait native_navigation(url);\n\t}\n\n\t/** @param {URL} url */\n\tasync function prefetch(url) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tif (!intent) {\n\t\t\tthrow new Error('Attempted to prefetch a URL that does not belong to this app');\n\t\t}\n\n\t\tload_cache.promise = load_route(intent);\n\t\tload_cache.id = intent.id;\n\n\t\treturn load_cache.promise;\n\t}\n\n\t/**\n\t * Returns `true` if update completes, `false` if it is aborted\n\t * @param {URL} url\n\t * @param {string[]} redirect_chain\n\t * @param {{hash?: string, scroll: { x: number, y: number } | null, keepfocus: boolean, details: { replaceState: boolean, state: any } | null}} [opts]\n\t * @param {() => void} [callback]\n\t */\n\tasync function update(url, redirect_chain, opts, callback) {\n\t\tconst intent = get_navigation_intent(url);\n\n\t\tconst current_token = (token = {});\n\t\tlet navigation_result = intent && (await load_route(intent));\n\n\t\tif (\n\t\t\t!navigation_result &&\n\t\t\turl.origin === location.origin &&\n\t\t\turl.pathname === location.pathname\n\t\t) {\n\t\t\t// this could happen in SPA fallback mode if the user navigated to\n\t\t\t// `/non-existent-page`. if we fall back to reloading the page, it\n\t\t\t// will create an infinite loop. so whereas we normally handle\n\t\t\t// unknown routes by going to the server, in this special case\n\t\t\t// we render a client-side error page instead\n\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\tstatus: 404,\n\t\t\t\terror: new Error(`Not found: ${url.pathname}`),\n\t\t\t\turl,\n\t\t\t\trouteId: null\n\t\t\t});\n\t\t}\n\n\t\tif (!navigation_result) {\n\t\t\tawait native_navigation(url);\n\t\t\treturn false; // unnecessary, but TypeScript prefers it this way\n\t\t}\n\n\t\t// if this is an internal navigation intent, use the normalized\n\t\t// URL for the rest of the function\n\t\turl = intent?.url || url;\n\n\t\t// abort if user navigated during update\n\t\tif (token !== current_token) return false;\n\n\t\tinvalidated.length = 0;\n\n\t\tif (navigation_result.type === 'redirect') {\n\t\t\tif (redirect_chain.length > 10 || redirect_chain.includes(url.pathname)) {\n\t\t\t\tnavigation_result = await load_root_error_page({\n\t\t\t\t\tstatus: 500,\n\t\t\t\t\terror: new Error('Redirect loop'),\n\t\t\t\t\turl,\n\t\t\t\t\trouteId: null\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (router_enabled) {\n\t\t\t\t\tgoto(new URL(navigation_result.location, url).href, {}, [\n\t\t\t\t\t\t...redirect_chain,\n\t\t\t\t\t\turl.pathname\n\t\t\t\t\t]);\n\t\t\t\t} else {\n\t\t\t\t\tawait native_navigation(new URL(navigation_result.location, location.href));\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (navigation_result.props?.page?.status >= 400) {\n\t\t\tconst updated = await stores.updated.check();\n\t\t\tif (updated) {\n\t\t\t\tawait native_navigation(url);\n\t\t\t}\n\t\t}\n\n\t\tupdating = true;\n\n\t\tif (opts && opts.details) {\n\t\t\tconst { details } = opts;\n\t\t\tconst change = details.replaceState ? 0 : 1;\n\t\t\tdetails.state[INDEX_KEY] = current_history_index += change;\n\t\t\thistory[details.replaceState ? 'replaceState' : 'pushState'](details.state, '', url);\n\t\t}\n\n\t\tif (started) {\n\t\t\tcurrent = navigation_result.state;\n\n\t\t\tif (navigation_result.props.page) {\n\t\t\t\tnavigation_result.props.page.url = url;\n\t\t\t}\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\t// Nasty hack to silence harmless warnings the user can do nothing about\n\t\t\t\tconst warn = console.warn;\n\t\t\t\tconsole.warn = (...args) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\targs.length !== 1 ||\n\t\t\t\t\t\t!/<(Layout|Page)(_[\\w$]+)?> was created with unknown prop '(data|errors)'/.test(args[0])\n\t\t\t\t\t) {\n\t\t\t\t\t\twarn(...args);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\troot.$set(navigation_result.props);\n\t\t\t\ttick().then(() => (console.warn = warn));\n\t\t\t} else {\n\t\t\t\troot.$set(navigation_result.props);\n\t\t\t}\n\t\t} else {\n\t\t\tinitialize(navigation_result);\n\t\t}\n\n\t\t// opts must be passed if we're navigating\n\t\tif (opts) {\n\t\t\tconst { scroll, keepfocus } = opts;\n\n\t\t\tif (!keepfocus) {\n\t\t\t\t// Reset page selection and focus\n\t\t\t\t// We try to mimic browsers' behaviour as closely as possible by targeting the\n\t\t\t\t// first scrollable region, but unfortunately it's not a perfect match — e.g.\n\t\t\t\t// shift-tabbing won't immediately cycle up from the end of the page on Chromium\n\t\t\t\t// See https://html.spec.whatwg.org/multipage/interaction.html#get-the-focusable-area\n\t\t\t\tconst root = document.body;\n\t\t\t\tconst tabindex = root.getAttribute('tabindex');\n\n\t\t\t\troot.tabIndex = -1;\n\t\t\t\troot.focus({ preventScroll: true });\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tgetSelection()?.removeAllRanges();\n\t\t\t\t});\n\n\t\t\t\t// restore `tabindex` as to prevent `root` from stealing input from elements\n\t\t\t\tif (tabindex !== null) {\n\t\t\t\t\troot.setAttribute('tabindex', tabindex);\n\t\t\t\t} else {\n\t\t\t\t\troot.removeAttribute('tabindex');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// need to render the DOM before we can scroll to the rendered elements\n\t\t\tawait tick();\n\n\t\t\tif (autoscroll) {\n\t\t\t\tconst deep_linked = url.hash && document.getElementById(url.hash.slice(1));\n\t\t\t\tif (scroll) {\n\t\t\t\t\tscrollTo(scroll.x, scroll.y);\n\t\t\t\t} else if (deep_linked) {\n\t\t\t\t\t// Here we use `scrollIntoView` on the element instead of `scrollTo`\n\t\t\t\t\t// because it natively supports the `scroll-margin` and `scroll-behavior`\n\t\t\t\t\t// CSS properties.\n\t\t\t\t\tdeep_linked.scrollIntoView();\n\t\t\t\t} else {\n\t\t\t\t\tscrollTo(0, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// in this case we're simply invalidating\n\t\t\tawait tick();\n\t\t}\n\n\t\tload_cache.promise = null;\n\t\tload_cache.id = null;\n\t\tautoscroll = true;\n\n\t\tif (navigation_result.props.page) {\n\t\t\tpage = navigation_result.props.page;\n\t\t}\n\n\t\tconst leaf_node = navigation_result.state.branch[navigation_result.state.branch.length - 1];\n\t\trouter_enabled = leaf_node?.node.shared?.router !== false;\n\n\t\tif (callback) callback();\n\n\t\tupdating = false;\n\t}\n\n\t/** @param {import('./types').NavigationFinished} result */\n\tfunction initialize(result) {\n\t\tcurrent = result.state;\n\n\t\tconst style = document.querySelector('style[data-sveltekit]');\n\t\tif (style) style.remove();\n\n\t\tpage = result.props.page;\n\n\t\tif (import.meta.env.DEV) {\n\t\t\t// Nasty hack to silence harmless warnings the user can do nothing about\n\t\t\tconst warn = console.warn;\n\t\t\tconsole.warn = (...args) => {\n\t\t\t\tif (\n\t\t\t\t\targs.length !== 1 ||\n\t\t\t\t\t!/<(Layout|Page)(_[\\w$]+)?> was created with unknown prop '(data|errors)'/.test(args[0])\n\t\t\t\t) {\n\t\t\t\t\twarn(...args);\n\t\t\t\t}\n\t\t\t};\n\t\t\troot = new Root({\n\t\t\t\ttarget,\n\t\t\t\tprops: { ...result.props, stores },\n\t\t\t\thydrate: true\n\t\t\t});\n\t\t\tconsole.warn = warn;\n\t\t} else {\n\t\t\troot = new Root({\n\t\t\t\ttarget,\n\t\t\t\tprops: { ...result.props, stores },\n\t\t\t\thydrate: true\n\t\t\t});\n\t\t}\n\n\t\tif (router_enabled) {\n\t\t\tconst navigation = { from: null, to: new URL(location.href) };\n\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\t\t}\n\n\t\tstarted = true;\n\t}\n\n\t/**\n\t *\n\t * @param {{\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   branch: Array<import('./types').BranchNode | undefined>;\n\t *   status: number;\n\t *   error: HttpError | Error | null;\n\t *   routeId: string | null;\n\t *   validation_errors?: string | undefined;\n\t * }} opts\n\t */\n\tasync function get_navigation_result_from_branch({\n\t\turl,\n\t\tparams,\n\t\tbranch,\n\t\tstatus,\n\t\terror,\n\t\trouteId,\n\t\tvalidation_errors\n\t}) {\n\t\tconst filtered = /** @type {import('./types').BranchNode[] } */ (branch.filter(Boolean));\n\n\t\t/** @type {import('./types').NavigationFinished} */\n\t\tconst result = {\n\t\t\ttype: 'loaded',\n\t\t\tstate: {\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\tbranch,\n\t\t\t\terror,\n\t\t\t\tsession_id\n\t\t\t},\n\t\t\tprops: {\n\t\t\t\tcomponents: filtered.map((branch_node) => branch_node.node.component),\n\t\t\t\terrors: validation_errors\n\t\t\t}\n\t\t};\n\n\t\tlet data = {};\n\t\tlet data_changed = false;\n\t\tfor (let i = 0; i < filtered.length; i += 1) {\n\t\t\tdata = { ...data, ...filtered[i].data };\n\t\t\t// Only set props if the node actually updated. This prevents needless rerenders.\n\t\t\tif (data_changed || !current.branch.some((node) => node === filtered[i])) {\n\t\t\t\tresult.props[`data_${i}`] = data;\n\t\t\t\tdata_changed = true;\n\t\t\t}\n\t\t}\n\n\t\tconst page_changed =\n\t\t\t!current.url || url.href !== current.url.href || current.error !== error || data_changed;\n\n\t\tif (page_changed) {\n\t\t\tresult.props.page = { error, params, routeId, status, url, data };\n\n\t\t\t// TODO remove this for 1.0\n\t\t\t/**\n\t\t\t * @param {string} property\n\t\t\t * @param {string} replacement\n\t\t\t */\n\t\t\tconst print_error = (property, replacement) => {\n\t\t\t\tObject.defineProperty(result.props.page, property, {\n\t\t\t\t\tget: () => {\n\t\t\t\t\t\tthrow new Error(`$page.${property} has been replaced by $page.url.${replacement}`);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tprint_error('origin', 'origin');\n\t\t\tprint_error('path', 'pathname');\n\t\t\tprint_error('query', 'searchParams');\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Call the load function of the given node, if it exists.\n\t * If `server_data` is passed, this is treated as the initial run and the page endpoint is not requested.\n\t *\n\t * @param {{\n\t *   loader: import('types').CSRPageNodeLoader;\n\t * \t parent: () => Promise<Record<string, any>>;\n\t *   url: URL;\n\t *   params: Record<string, string>;\n\t *   routeId: string | null;\n\t * \t server_data_node: import('./types').DataNode | null;\n\t * }} options\n\t * @returns {Promise<import('./types').BranchNode>}\n\t */\n\tasync function load_node({ loader, parent, url, params, routeId, server_data_node }) {\n\t\t/** @type {Record<string, any> | null} */\n\t\tlet data = null;\n\n\t\t/** @type {import('types').Uses} */\n\t\tconst uses = {\n\t\t\tdependencies: new Set(),\n\t\t\tparams: new Set(),\n\t\t\tparent: false,\n\t\t\turl: false\n\t\t};\n\n\t\tconst node = await loader();\n\n\t\tif (node.shared?.load) {\n\t\t\t/** @param {string[]} deps */\n\t\t\tfunction depends(...deps) {\n\t\t\t\tfor (const dep of deps) {\n\t\t\t\t\tconst { href } = new URL(dep, url);\n\t\t\t\t\tuses.dependencies.add(href);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** @type {Record<string, string>} */\n\t\t\tconst uses_params = {};\n\t\t\tfor (const key in params) {\n\t\t\t\tObject.defineProperty(uses_params, key, {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tuses.params.add(key);\n\t\t\t\t\t\treturn params[key];\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/** @type {import('types').LoadEvent} */\n\t\t\tconst load_input = {\n\t\t\t\trouteId,\n\t\t\t\tparams: uses_params,\n\t\t\t\tdata: server_data_node?.data ?? null,\n\t\t\t\turl: make_trackable(url, () => {\n\t\t\t\t\tuses.url = true;\n\t\t\t\t}),\n\t\t\t\tasync fetch(resource, init) {\n\t\t\t\t\tlet requested;\n\n\t\t\t\t\tif (typeof resource === 'string') {\n\t\t\t\t\t\trequested = resource;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trequested = resource.url;\n\n\t\t\t\t\t\t// we're not allowed to modify the received `Request` object, so in order\n\t\t\t\t\t\t// to fixup relative urls we create a new equivalent `init` object instead\n\t\t\t\t\t\tinit = {\n\t\t\t\t\t\t\t// the request body must be consumed in memory until browsers\n\t\t\t\t\t\t\t// implement streaming request bodies and/or the body getter\n\t\t\t\t\t\t\tbody:\n\t\t\t\t\t\t\t\tresource.method === 'GET' || resource.method === 'HEAD'\n\t\t\t\t\t\t\t\t\t? undefined\n\t\t\t\t\t\t\t\t\t: await resource.blob(),\n\t\t\t\t\t\t\tcache: resource.cache,\n\t\t\t\t\t\t\tcredentials: resource.credentials,\n\t\t\t\t\t\t\theaders: resource.headers,\n\t\t\t\t\t\t\tintegrity: resource.integrity,\n\t\t\t\t\t\t\tkeepalive: resource.keepalive,\n\t\t\t\t\t\t\tmethod: resource.method,\n\t\t\t\t\t\t\tmode: resource.mode,\n\t\t\t\t\t\t\tredirect: resource.redirect,\n\t\t\t\t\t\t\treferrer: resource.referrer,\n\t\t\t\t\t\t\treferrerPolicy: resource.referrerPolicy,\n\t\t\t\t\t\t\tsignal: resource.signal,\n\t\t\t\t\t\t\t...init\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// we must fixup relative urls so they are resolved from the target page\n\t\t\t\t\tconst normalized = new URL(requested, url).href;\n\t\t\t\t\tdepends(normalized);\n\n\t\t\t\t\t// prerendered pages may be served from any origin, so `initial_fetch` urls shouldn't be normalized\n\t\t\t\t\treturn started ? native_fetch(normalized, init) : initial_fetch(requested, init);\n\t\t\t\t},\n\t\t\t\tsetHeaders: () => {}, // noop\n\t\t\t\tdepends,\n\t\t\t\tparent() {\n\t\t\t\t\tuses.parent = true;\n\t\t\t\t\treturn parent();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// TODO remove this for 1.0\n\t\t\tObject.defineProperties(load_input, {\n\t\t\t\tprops: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'@migration task: Replace `props` with `data` stuff https://github.com/sveltejs/kit/discussions/5774#discussioncomment-3292693'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t},\n\t\t\t\tsession: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'session is no longer available. See https://github.com/sveltejs/kit/discussions/5883'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t},\n\t\t\t\tstuff: {\n\t\t\t\t\tget() {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t'@migration task: Remove stuff https://github.com/sveltejs/kit/discussions/5774#discussioncomment-3292693'\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tenumerable: false\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (import.meta.env.DEV) {\n\t\t\t\ttry {\n\t\t\t\t\tlock_fetch();\n\t\t\t\t\tdata = (await node.shared.load.call(null, load_input)) ?? null;\n\t\t\t\t} finally {\n\t\t\t\t\tunlock_fetch();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdata = (await node.shared.load.call(null, load_input)) ?? null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tnode,\n\t\t\tloader,\n\t\t\tserver: server_data_node,\n\t\t\tshared: node.shared?.load ? { type: 'data', data, uses } : null,\n\t\t\tdata: data ?? server_data_node?.data ?? null\n\t\t};\n\t}\n\n\t/**\n\t * @param {import('types').Uses | undefined} uses\n\t * @param {boolean} parent_changed\n\t * @param {{ url: boolean, params: string[] }} changed\n\t */\n\tfunction has_changed(changed, parent_changed, uses) {\n\t\tif (!uses) return false;\n\n\t\tif (uses.parent && parent_changed) return true;\n\t\tif (changed.url && uses.url) return true;\n\n\t\tfor (const param of changed.params) {\n\t\t\tif (uses.params.has(param)) return true;\n\t\t}\n\n\t\tfor (const dep of uses.dependencies) {\n\t\t\tif (invalidated.some((fn) => fn(dep))) return true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * @param {import('types').ServerDataNode | import('types').ServerDataSkippedNode | null} node\n\t * @param {import('./types').DataNode | null} [previous]\n\t * @returns {import('./types').DataNode | null}\n\t */\n\tfunction create_data_node(node, previous) {\n\t\tif (node?.type === 'data') {\n\t\t\treturn {\n\t\t\t\ttype: 'data',\n\t\t\t\tdata: node.data,\n\t\t\t\tuses: {\n\t\t\t\t\tdependencies: new Set(node.uses.dependencies ?? []),\n\t\t\t\t\tparams: new Set(node.uses.params ?? []),\n\t\t\t\t\tparent: !!node.uses.parent,\n\t\t\t\t\turl: !!node.uses.url\n\t\t\t\t}\n\t\t\t};\n\t\t} else if (node?.type === 'skip') {\n\t\t\treturn previous ?? null;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @param {import('./types').NavigationIntent} intent\n\t * @returns {Promise<import('./types').NavigationResult | undefined>}\n\t */\n\tasync function load_route({ id, url, params, route }) {\n\t\tif (load_cache.id === id && load_cache.promise) {\n\t\t\treturn load_cache.promise;\n\t\t}\n\n\t\tconst { errors, layouts, leaf } = route;\n\n\t\tconst changed = current.url && {\n\t\t\turl: id !== current.url.pathname + current.url.search,\n\t\t\tparams: Object.keys(params).filter((key) => current.params[key] !== params[key])\n\t\t};\n\n\t\t// preload modules to avoid waterfall, but handle rejections\n\t\t// so they don't get reported to Sentry et al (we don't need\n\t\t// to act on the failures at this point)\n\t\t[...errors, ...layouts, leaf].forEach((loader) => loader?.().catch(() => {}));\n\n\t\tconst loaders = [...layouts, leaf];\n\n\t\t// To avoid waterfalls when someone awaits a parent, compute as much as possible here already\n\n\t\t/** @type {import('types').ServerData | null} */\n\t\tlet server_data = null;\n\n\t\tconst invalid_server_nodes = loaders.reduce((acc, loader, i) => {\n\t\t\tconst previous = current.branch[i];\n\t\t\tconst invalid =\n\t\t\t\tloader &&\n\t\t\t\t(previous?.loader !== loader ||\n\t\t\t\t\thas_changed(changed, acc.some(Boolean), previous.server?.uses));\n\n\t\t\tacc.push(invalid);\n\t\t\treturn acc;\n\t\t}, /** @type {boolean[]} */ ([]));\n\n\t\tif (route.uses_server_data && invalid_server_nodes.some(Boolean)) {\n\t\t\ttry {\n\t\t\t\tconst res = await native_fetch(\n\t\t\t\t\t`${url.pathname}${url.pathname.endsWith('/') ? '' : '/'}__data.json${url.search}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'x-sveltekit-invalidated': invalid_server_nodes.map((x) => (x ? '1' : '')).join(',')\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tserver_data = /** @type {import('types').ServerData} */ (await res.json());\n\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow server_data;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t// something went catastrophically wrong — bail and defer to the server\n\t\t\t\tnative_navigation(url);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (server_data.type === 'redirect') {\n\t\t\t\treturn server_data;\n\t\t\t}\n\t\t}\n\n\t\tconst server_data_nodes = server_data?.nodes;\n\n\t\tlet parent_changed = false;\n\n\t\tconst branch_promises = loaders.map(async (loader, i) => {\n\t\t\tif (!loader) return;\n\n\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\tconst previous = current.branch[i];\n\n\t\t\tconst server_data_node = server_data_nodes?.[i] ?? null;\n\n\t\t\tconst can_reuse_server_data = !server_data_node || server_data_node.type === 'skip';\n\t\t\t// re-use data from previous load if it's still valid\n\t\t\tconst valid =\n\t\t\t\tcan_reuse_server_data &&\n\t\t\t\tloader === previous?.loader &&\n\t\t\t\t!has_changed(changed, parent_changed, previous.shared?.uses);\n\t\t\tif (valid) return previous;\n\n\t\t\tparent_changed = true;\n\n\t\t\tif (server_data_node?.type === 'error') {\n\t\t\t\tif (server_data_node.httperror) {\n\t\t\t\t\t// reconstruct as an HttpError\n\t\t\t\t\tthrow error(server_data_node.httperror.status, server_data_node.httperror.message);\n\t\t\t\t} else {\n\t\t\t\t\tthrow server_data_node.error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn load_node({\n\t\t\t\tloader,\n\t\t\t\turl,\n\t\t\t\tparams,\n\t\t\t\trouteId: route.id,\n\t\t\t\tparent: async () => {\n\t\t\t\t\tconst data = {};\n\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\tObject.assign(data, (await branch_promises[j])?.data);\n\t\t\t\t\t}\n\t\t\t\t\treturn data;\n\t\t\t\t},\n\t\t\t\tserver_data_node: create_data_node(server_data_node, previous?.server)\n\t\t\t});\n\t\t});\n\n\t\t// if we don't do this, rejections will be unhandled\n\t\tfor (const p of branch_promises) p.catch(() => {});\n\n\t\t/** @type {Array<import('./types').BranchNode | undefined>} */\n\t\tconst branch = [];\n\n\t\tfor (let i = 0; i < loaders.length; i += 1) {\n\t\t\tif (loaders[i]) {\n\t\t\t\ttry {\n\t\t\t\t\tbranch.push(await branch_promises[i]);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst error = normalize_error(e);\n\n\t\t\t\t\tif (error instanceof Redirect) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttype: 'redirect',\n\t\t\t\t\t\t\tlocation: error.location\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\tconst status = e instanceof HttpError ? e.status : 500;\n\n\t\t\t\t\twhile (i--) {\n\t\t\t\t\t\tif (errors[i]) {\n\t\t\t\t\t\t\t/** @type {import('./types').BranchNode | undefined} */\n\t\t\t\t\t\t\tlet error_loaded;\n\n\t\t\t\t\t\t\tlet j = i;\n\t\t\t\t\t\t\twhile (!branch[j]) j -= 1;\n\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\terror_loaded = {\n\t\t\t\t\t\t\t\t\tnode: await errors[i](),\n\t\t\t\t\t\t\t\t\tloader: errors[i],\n\t\t\t\t\t\t\t\t\tdata: {},\n\t\t\t\t\t\t\t\t\tserver: null,\n\t\t\t\t\t\t\t\t\tshared: null\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\treturn await get_navigation_result_from_branch({\n\t\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\t\tbranch: branch.slice(0, j + 1).concat(error_loaded),\n\t\t\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\t\t\terror,\n\t\t\t\t\t\t\t\t\trouteId: route.id\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// if we get here, it's because the root `load` function failed,\n\t\t\t\t\t// and we need to fall back to the server\n\t\t\t\t\tnative_navigation(url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// push an empty slot so we can rewind past gaps to the\n\t\t\t\t// layout that corresponds with an +error.svelte page\n\t\t\t\tbranch.push(undefined);\n\t\t\t}\n\t\t}\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tbranch,\n\t\t\tstatus: 200,\n\t\t\terror: null,\n\t\t\trouteId: route.id\n\t\t});\n\t}\n\n\t/**\n\t * @param {{\n\t *   status: number;\n\t *   error: HttpError | Error;\n\t *   url: URL;\n\t *   routeId: string | null\n\t * }} opts\n\t * @returns {Promise<import('./types').NavigationFinished>}\n\t */\n\tasync function load_root_error_page({ status, error, url, routeId }) {\n\t\t/** @type {Record<string, string>} */\n\t\tconst params = {}; // error page does not have params\n\n\t\tconst node = await default_layout_loader();\n\n\t\t/** @type {import('types').ServerDataNode | null} */\n\t\tlet server_data_node = null;\n\n\t\tif (node.server) {\n\t\t\t// TODO post-https://github.com/sveltejs/kit/discussions/6124 we can use\n\t\t\t// existing root layout data\n\t\t\tconst res = await native_fetch(\n\t\t\t\t`${url.pathname}${url.pathname.endsWith('/') ? '' : '/'}__data.json${url.search}`,\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'x-sveltekit-invalidated': '1'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst server_data_nodes = await res.json();\n\t\t\tserver_data_node = server_data_nodes?.[0] ?? null;\n\n\t\t\tif (!res.ok || server_data_nodes?.type !== 'data') {\n\t\t\t\t// at this point we have no choice but to fall back to the server\n\t\t\t\tnative_navigation(url);\n\n\t\t\t\t// @ts-expect-error\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst root_layout = await load_node({\n\t\t\tloader: default_layout_loader,\n\t\t\turl,\n\t\t\tparams,\n\t\t\trouteId,\n\t\t\tparent: () => Promise.resolve({}),\n\t\t\tserver_data_node: create_data_node(server_data_node)\n\t\t});\n\n\t\t/** @type {import('./types').BranchNode} */\n\t\tconst root_error = {\n\t\t\tnode: await default_error_loader(),\n\t\t\tloader: default_error_loader,\n\t\t\tshared: null,\n\t\t\tserver: null,\n\t\t\tdata: null\n\t\t};\n\n\t\treturn await get_navigation_result_from_branch({\n\t\t\turl,\n\t\t\tparams,\n\t\t\tbranch: [root_layout, root_error],\n\t\t\tstatus,\n\t\t\terror,\n\t\t\trouteId\n\t\t});\n\t}\n\n\t/** @param {URL} url */\n\tfunction get_navigation_intent(url) {\n\t\tif (url.origin !== location.origin || !url.pathname.startsWith(base)) return;\n\n\t\tconst path = decodeURI(url.pathname.slice(base.length) || '/');\n\n\t\tfor (const route of routes) {\n\t\t\tconst params = route.exec(path);\n\n\t\t\tif (params) {\n\t\t\t\tconst normalized = new URL(\n\t\t\t\t\turl.origin + normalize_path(url.pathname, trailing_slash) + url.search + url.hash\n\t\t\t\t);\n\t\t\t\tconst id = normalized.pathname + normalized.search;\n\t\t\t\t/** @type {import('./types').NavigationIntent} */\n\t\t\t\tconst intent = { id, route, params: decode_params(params), url: normalized };\n\t\t\t\treturn intent;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {{\n\t *   url: URL;\n\t *   scroll: { x: number, y: number } | null;\n\t *   keepfocus: boolean;\n\t *   redirect_chain: string[];\n\t *   details: {\n\t *     replaceState: boolean;\n\t *     state: any;\n\t *   } | null;\n\t *   accepted: () => void;\n\t *   blocked: () => void;\n\t * }} opts\n\t */\n\tasync function navigate({ url, scroll, keepfocus, redirect_chain, details, accepted, blocked }) {\n\t\tconst from = current.url;\n\t\tlet should_block = false;\n\n\t\tconst navigation = {\n\t\t\tfrom,\n\t\t\tto: url,\n\t\t\tcancel: () => (should_block = true)\n\t\t};\n\n\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\tif (should_block) {\n\t\t\tblocked();\n\t\t\treturn;\n\t\t}\n\n\t\tupdate_scroll_positions(current_history_index);\n\n\t\taccepted();\n\n\t\tif (started) {\n\t\t\tstores.navigating.set({\n\t\t\t\tfrom: current.url,\n\t\t\t\tto: url\n\t\t\t});\n\t\t}\n\n\t\tawait update(\n\t\t\turl,\n\t\t\tredirect_chain,\n\t\t\t{\n\t\t\t\tscroll,\n\t\t\t\tkeepfocus,\n\t\t\t\tdetails\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tconst navigation = { from, to: url };\n\t\t\t\tcallbacks.after_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tstores.navigating.set(null);\n\t\t\t}\n\t\t);\n\t}\n\n\t/**\n\t * Loads `href` the old-fashioned way, with a full page reload.\n\t * Returns a `Promise` that never resolves (to prevent any\n\t * subsequent work, e.g. history manipulation, from happening)\n\t * @param {URL} url\n\t */\n\tfunction native_navigation(url) {\n\t\tlocation.href = url.href;\n\t\treturn new Promise(() => {});\n\t}\n\n\tif (import.meta.hot) {\n\t\timport.meta.hot.on('vite:beforeUpdate', () => {\n\t\t\tif (current.error) location.reload();\n\t\t});\n\t}\n\n\treturn {\n\t\tafter_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.after_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.after_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.after_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tbefore_navigate: (fn) => {\n\t\t\tonMount(() => {\n\t\t\t\tcallbacks.before_navigate.push(fn);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tconst i = callbacks.before_navigate.indexOf(fn);\n\t\t\t\t\tcallbacks.before_navigate.splice(i, 1);\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\n\t\tdisable_scroll_handling: () => {\n\t\t\tif (import.meta.env.DEV && started && !updating) {\n\t\t\t\tthrow new Error('Can only disable scroll handling during navigation');\n\t\t\t}\n\n\t\t\tif (updating || !started) {\n\t\t\t\tautoscroll = false;\n\t\t\t}\n\t\t},\n\n\t\tgoto: (href, opts = {}) => goto(href, opts, []),\n\n\t\tinvalidate: (resource) => {\n\t\t\tif (resource === undefined) {\n\t\t\t\t// Force rerun of all load functions, regardless of their dependencies\n\t\t\t\tfor (const node of current.branch) {\n\t\t\t\t\tnode?.server?.uses.dependencies.add('');\n\t\t\t\t\tnode?.shared?.uses.dependencies.add('');\n\t\t\t\t}\n\t\t\t\tinvalidated.push(() => true);\n\t\t\t} else if (typeof resource === 'function') {\n\t\t\t\tinvalidated.push(resource);\n\t\t\t} else {\n\t\t\t\tconst { href } = new URL(resource, location.href);\n\t\t\t\tinvalidated.push((dep) => dep === href);\n\t\t\t}\n\n\t\t\tif (!invalidating) {\n\t\t\t\tinvalidating = Promise.resolve().then(async () => {\n\t\t\t\t\tawait update(new URL(location.href), []);\n\n\t\t\t\t\tinvalidating = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn invalidating;\n\t\t},\n\n\t\tprefetch: async (href) => {\n\t\t\tconst url = new URL(href, get_base_uri(document));\n\t\t\tawait prefetch(url);\n\t\t},\n\n\t\t// TODO rethink this API\n\t\tprefetch_routes: async (pathnames) => {\n\t\t\tconst matching = pathnames\n\t\t\t\t? routes.filter((route) => pathnames.some((pathname) => route.exec(pathname)))\n\t\t\t\t: routes;\n\n\t\t\tconst promises = matching.map((r) => {\n\t\t\t\treturn Promise.all([...r.layouts, r.leaf].map((load) => load?.()));\n\t\t\t});\n\n\t\t\tawait Promise.all(promises);\n\t\t},\n\n\t\t_start_router: () => {\n\t\t\thistory.scrollRestoration = 'manual';\n\n\t\t\t// Adopted from Nuxt.js\n\t\t\t// Reset scrollRestoration to auto when leaving page, allowing page reload\n\t\t\t// and back-navigation from other pages to use the browser to restore the\n\t\t\t// scrolling position.\n\t\t\taddEventListener('beforeunload', (e) => {\n\t\t\t\tlet should_block = false;\n\n\t\t\t\tconst navigation = {\n\t\t\t\t\tfrom: current.url,\n\t\t\t\t\tto: null,\n\t\t\t\t\tcancel: () => (should_block = true)\n\t\t\t\t};\n\n\t\t\t\tcallbacks.before_navigate.forEach((fn) => fn(navigation));\n\n\t\t\t\tif (should_block) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.returnValue = '';\n\t\t\t\t} else {\n\t\t\t\t\thistory.scrollRestoration = 'auto';\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('visibilitychange', () => {\n\t\t\t\tif (document.visibilityState === 'hidden') {\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tsessionStorage[SCROLL_KEY] = JSON.stringify(scroll_positions);\n\t\t\t\t\t} catch {\n\t\t\t\t\t\t// do nothing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/** @param {Event} event */\n\t\t\tconst trigger_prefetch = (event) => {\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (a && a.href && a.hasAttribute('sveltekit:prefetch')) {\n\t\t\t\t\tprefetch(get_href(a));\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/** @type {NodeJS.Timeout} */\n\t\t\tlet mousemove_timeout;\n\n\t\t\t/** @param {MouseEvent|TouchEvent} event */\n\t\t\tconst handle_mousemove = (event) => {\n\t\t\t\tclearTimeout(mousemove_timeout);\n\t\t\t\tmousemove_timeout = setTimeout(() => {\n\t\t\t\t\t// event.composedPath(), which is used in find_anchor, will be empty if the event is read in a timeout\n\t\t\t\t\t// add a layer of indirection to address that\n\t\t\t\t\tevent.target?.dispatchEvent(\n\t\t\t\t\t\tnew CustomEvent('sveltekit:trigger_prefetch', { bubbles: true })\n\t\t\t\t\t);\n\t\t\t\t}, 20);\n\t\t\t};\n\n\t\t\taddEventListener('touchstart', trigger_prefetch);\n\t\t\taddEventListener('mousemove', handle_mousemove);\n\t\t\taddEventListener('sveltekit:trigger_prefetch', trigger_prefetch);\n\n\t\t\t/** @param {MouseEvent} event */\n\t\t\taddEventListener('click', (event) => {\n\t\t\t\tif (!router_enabled) return;\n\n\t\t\t\t// Adapted from https://github.com/visionmedia/page.js\n\t\t\t\t// MIT license https://github.com/visionmedia/page.js#license\n\t\t\t\tif (event.button || event.which !== 1) return;\n\t\t\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) return;\n\t\t\t\tif (event.defaultPrevented) return;\n\n\t\t\t\tconst a = find_anchor(event);\n\t\t\t\tif (!a) return;\n\n\t\t\t\tif (!a.href) return;\n\n\t\t\t\tconst is_svg_a_element = a instanceof SVGAElement;\n\t\t\t\tconst url = get_href(a);\n\n\t\t\t\t// Ignore non-HTTP URL protocols (e.g. `mailto:`, `tel:`, `myapp:`, etc.)\n\t\t\t\t// MEMO: Without this condition, firefox will open mailer twice.\n\t\t\t\t// See:\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/4045\n\t\t\t\t// - https://github.com/sveltejs/kit/issues/5725\n\t\t\t\tif (!is_svg_a_element && !(url.protocol === 'https:' || url.protocol === 'http:')) return;\n\n\t\t\t\t// Ignore if tag has\n\t\t\t\t// 1. 'download' attribute\n\t\t\t\t// 2. 'rel' attribute includes external\n\t\t\t\tconst rel = (a.getAttribute('rel') || '').split(/\\s+/);\n\n\t\t\t\tif (\n\t\t\t\t\ta.hasAttribute('download') ||\n\t\t\t\t\trel.includes('external') ||\n\t\t\t\t\ta.hasAttribute('sveltekit:reload')\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Ignore if <a> has a target\n\t\t\t\tif (is_svg_a_element ? a.target.baseVal : a.target) return;\n\n\t\t\t\t// Check if new url only differs by hash and use the browser default behavior in that case\n\t\t\t\t// This will ensure the `hashchange` event is fired\n\t\t\t\t// Removing the hash does a full page navigation in the browser, so make sure a hash is present\n\t\t\t\tconst [base, hash] = url.href.split('#');\n\t\t\t\tif (hash !== undefined && base === location.href.split('#')[0]) {\n\t\t\t\t\t// set this flag to distinguish between navigations triggered by\n\t\t\t\t\t// clicking a hash link and those triggered by popstate\n\t\t\t\t\thash_navigating = true;\n\n\t\t\t\t\tupdate_scroll_positions(current_history_index);\n\n\t\t\t\t\tstores.page.set({ ...page, url });\n\t\t\t\t\tstores.page.notify();\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tnavigate({\n\t\t\t\t\turl,\n\t\t\t\t\tscroll: a.hasAttribute('sveltekit:noscroll') ? scroll_state() : null,\n\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\tdetails: {\n\t\t\t\t\t\tstate: {},\n\t\t\t\t\t\treplaceState: url.href === location.href\n\t\t\t\t\t},\n\t\t\t\t\taccepted: () => event.preventDefault(),\n\t\t\t\t\tblocked: () => event.preventDefault()\n\t\t\t\t});\n\t\t\t});\n\n\t\t\taddEventListener('popstate', (event) => {\n\t\t\t\tif (event.state && router_enabled) {\n\t\t\t\t\t// if a popstate-driven navigation is cancelled, we need to counteract it\n\t\t\t\t\t// with history.go, which means we end up back here, hence this check\n\t\t\t\t\tif (event.state[INDEX_KEY] === current_history_index) return;\n\n\t\t\t\t\tnavigate({\n\t\t\t\t\t\turl: new URL(location.href),\n\t\t\t\t\t\tscroll: scroll_positions[event.state[INDEX_KEY]],\n\t\t\t\t\t\tkeepfocus: false,\n\t\t\t\t\t\tredirect_chain: [],\n\t\t\t\t\t\tdetails: null,\n\t\t\t\t\t\taccepted: () => {\n\t\t\t\t\t\t\tcurrent_history_index = event.state[INDEX_KEY];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tblocked: () => {\n\t\t\t\t\t\t\tconst delta = current_history_index - event.state[INDEX_KEY];\n\t\t\t\t\t\t\thistory.go(delta);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\taddEventListener('hashchange', () => {\n\t\t\t\t// if the hashchange happened as a result of clicking on a link,\n\t\t\t\t// we need to update history, otherwise we have to leave it alone\n\t\t\t\tif (hash_navigating) {\n\t\t\t\t\thash_navigating = false;\n\t\t\t\t\thistory.replaceState(\n\t\t\t\t\t\t{ ...history.state, [INDEX_KEY]: ++current_history_index },\n\t\t\t\t\t\t'',\n\t\t\t\t\t\tlocation.href\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// fix link[rel=icon], because browsers will occasionally try to load relative\n\t\t\t// URLs after a pushState/replaceState, resulting in a 404 — see\n\t\t\t// https://github.com/sveltejs/kit/issues/3748#issuecomment-1125980897\n\t\t\tfor (const link of document.querySelectorAll('link')) {\n\t\t\t\tif (link.rel === 'icon') link.href = link.href;\n\t\t\t}\n\n\t\t\taddEventListener('pageshow', (event) => {\n\t\t\t\t// If the user navigates to another site and then uses the back button and\n\t\t\t\t// bfcache hits, we need to set navigating to null, the site doesn't know\n\t\t\t\t// the navigation away from it was successful.\n\t\t\t\t// Info about bfcache here: https://web.dev/bfcache\n\t\t\t\tif (event.persisted) {\n\t\t\t\t\tstores.navigating.set(null);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\t_hydrate: async ({ status, error, node_ids, params, routeId }) => {\n\t\t\tconst url = new URL(location.href);\n\n\t\t\t/** @type {import('./types').NavigationFinished | undefined} */\n\t\t\tlet result;\n\n\t\t\ttry {\n\t\t\t\t/**\n\t\t\t\t * @param {string} type\n\t\t\t\t * @param {any} fallback\n\t\t\t\t */\n\t\t\t\tconst parse = (type, fallback) => {\n\t\t\t\t\tconst script = document.querySelector(`script[sveltekit\\\\:data-type=\"${type}\"]`);\n\t\t\t\t\treturn script?.textContent ? JSON.parse(script.textContent) : fallback;\n\t\t\t\t};\n\t\t\t\t/**\n\t\t\t\t * @type {Array<import('types').ServerDataNode | null>}\n\t\t\t\t * On initial navigation, this will only consist of data nodes or `null`.\n\t\t\t\t * A possible error is passed through the `error` property, in which case\n\t\t\t\t * the last entry of `node_ids` is an error page and the last entry of\n\t\t\t\t * `server_data_nodes` is `null`.\n\t\t\t\t */\n\t\t\t\tconst server_data_nodes = parse('server_data', []);\n\t\t\t\tconst validation_errors = parse('validation_errors', undefined);\n\n\t\t\t\tconst branch_promises = node_ids.map(async (n, i) => {\n\t\t\t\t\treturn load_node({\n\t\t\t\t\t\tloader: nodes[n],\n\t\t\t\t\t\turl,\n\t\t\t\t\t\tparams,\n\t\t\t\t\t\trouteId,\n\t\t\t\t\t\tparent: async () => {\n\t\t\t\t\t\t\tconst data = {};\n\t\t\t\t\t\t\tfor (let j = 0; j < i; j += 1) {\n\t\t\t\t\t\t\t\tObject.assign(data, (await branch_promises[j]).data);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn data;\n\t\t\t\t\t\t},\n\t\t\t\t\t\tserver_data_node: create_data_node(server_data_nodes[i])\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tresult = await get_navigation_result_from_branch({\n\t\t\t\t\turl,\n\t\t\t\t\tparams,\n\t\t\t\t\tbranch: await Promise.all(branch_promises),\n\t\t\t\t\tstatus,\n\t\t\t\t\terror: /** @type {import('../server/page/types').SerializedHttpError} */ (error)\n\t\t\t\t\t\t?.__is_http_error\n\t\t\t\t\t\t? new HttpError(\n\t\t\t\t\t\t\t\t/** @type {import('../server/page/types').SerializedHttpError} */ (error).status,\n\t\t\t\t\t\t\t\terror.message\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: error,\n\t\t\t\t\tvalidation_errors,\n\t\t\t\t\trouteId\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tconst error = normalize_error(e);\n\n\t\t\t\tif (error instanceof Redirect) {\n\t\t\t\t\t// this is a real edge case — `load` would need to return\n\t\t\t\t\t// a redirect but only in the browser\n\t\t\t\t\tawait native_navigation(new URL(/** @type {Redirect} */ (e).location, location.href));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult = await load_root_error_page({\n\t\t\t\t\tstatus: error instanceof HttpError ? error.status : 500,\n\t\t\t\t\terror,\n\t\t\t\t\turl,\n\t\t\t\t\trouteId\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tinitialize(result);\n\t\t}\n\t};\n}\n","/** @type {App.PublicEnv} */\nexport let env = {};\n\n/** @type {(environment: Record<string, string>) => void} */\nexport function set_public_env(environment) {\n\tenv = environment;\n}\n","import { create_client } from './client.js';\nimport { init } from './singletons.js';\nimport { set_paths } from '../paths.js';\n\nexport { set_public_env } from '../env-public.js';\n\n/**\n * @param {{\n *   paths: {\n *     assets: string;\n *     base: string;\n *   },\n *   target: Element;\n *   route: boolean;\n *   spa: boolean;\n *   trailing_slash: import('types').TrailingSlash;\n *   hydrate: {\n *     status: number;\n *     error: Error | (import('../server/page/types').SerializedHttpError);\n *     node_ids: number[];\n *     params: Record<string, string>;\n *     routeId: string | null;\n *   };\n * }} opts\n */\nexport async function start({ paths, target, route, spa, trailing_slash, hydrate }) {\n\tconst client = create_client({\n\t\ttarget,\n\t\tbase: paths.base,\n\t\ttrailing_slash\n\t});\n\n\tinit({ client });\n\tset_paths(paths);\n\n\tif (hydrate) {\n\t\tawait client._hydrate(hydrate);\n\t}\n\n\tif (route) {\n\t\tif (spa) client.goto(location.href, { replaceState: true });\n\t\tclient._start_router();\n\t}\n\n\tdispatchEvent(new CustomEvent('sveltekit:start'));\n}\n"],"file":"emuos/immutable/start-fd39f6ff.js"}