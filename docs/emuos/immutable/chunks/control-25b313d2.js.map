{"version":3,"file":"control-25b313d2.js","sources":["../../../../../../node_modules/@sveltejs/kit/src/runtime/control.js"],"sourcesContent":["export class HttpError {\n\t/**\n\t * @param {number} status\n\t * @param {{message: string} extends App.PageError ? (App.PageError | string | undefined) : App.PageError} body\n\t */\n\tconstructor(status, body) {\n\t\tthis.status = status;\n\t\tif (typeof body === 'string') {\n\t\t\tthis.body = { message: body };\n\t\t} else if (body) {\n\t\t\tthis.body = body;\n\t\t} else {\n\t\t\tthis.body = { message: `Error: ${status}` };\n\t\t}\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this.body);\n\t}\n}\n\nexport class Redirect {\n\t/**\n\t * @param {number} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n}\n\n/**\n * @template {Record<string, unknown> | undefined} [T=undefined]\n */\nexport class ValidationError {\n\t/**\n\t * @param {number} status\n\t * @param {T} [data]\n\t */\n\tconstructor(status, data) {\n\t\tthis.status = status;\n\t\tthis.data = data;\n\t}\n}\n\n/**\n * Creates an `HttpError` object with an HTTP status code and an optional message.\n * This object, if thrown during request handling, will cause SvelteKit to\n * return an error response without invoking `handleError`\n * @param {number} status\n * @param {string | undefined} [message]\n */\nexport function error(status, message) {\n\treturn new HttpError(status, message);\n}\n\n/**\n * Creates a `Redirect` object. If thrown during request handling, SvelteKit will\n * return a redirect response.\n * @param {number} status\n * @param {string} location\n */\nexport function redirect(status, location) {\n\tif (isNaN(status) || status < 300 || status > 399) {\n\t\tthrow new Error('Invalid status code');\n\t}\n\n\treturn new Redirect(status, location);\n}\n\n/**\n * Generates a JSON `Response` object from the supplied data.\n * @param {any} data\n * @param {ResponseInit} [init]\n */\nexport function json(data, init) {\n\t// TODO deprecate this in favour of `Response.json` when it's\n\t// more widely supported\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-type')) {\n\t\theaders.set('content-type', 'application/json');\n\t}\n\n\treturn new Response(JSON.stringify(data), {\n\t\t...init,\n\t\theaders\n\t});\n}\n\n/**\n * Generates a `ValidationError` object.\n * @param {number} status\n * @param {Record<string, any> | undefined} [data]\n */\nexport function invalid(status, data) {\n\treturn new ValidationError(status, data);\n}\n"],"names":["HttpError","status","body","Redirect","location"],"mappings":"AAAO,MAAMA,CAAU,CAKtB,YAAYC,EAAQC,EAAM,CACzB,KAAK,OAASD,EACV,OAAOC,GAAS,SACnB,KAAK,KAAO,CAAE,QAASA,CAAI,EACjBA,EACV,KAAK,KAAOA,EAEZ,KAAK,KAAO,CAAE,QAAS,UAAUD,IAElC,CAED,UAAW,CACV,OAAO,KAAK,UAAU,KAAK,IAAI,CAC/B,CACF,CAEO,MAAME,CAAS,CAKrB,YAAYF,EAAQG,EAAU,CAC7B,KAAK,OAASH,EACd,KAAK,SAAWG,CAChB,CACF"}