{"version":3,"file":"index-eacc6778.js","sources":["../../../../../../node_modules/@sveltejs/kit/src/runtime/control.js","../../../../../../node_modules/@sveltejs/kit/src/exports/index.js"],"sourcesContent":["export class HttpError {\n\t// without these, things like `$page.error.stack` will error. we don't want to\n\t// include a stack for these sorts of errors, but we also don't want red\n\t// squigglies everywhere, so this feels like a not-terribile compromise\n\tname = 'HttpError';\n\n\t/** @type {void} */\n\tstack = undefined;\n\n\t/**\n\t * @param {number} status\n\t * @param {string | undefined} message\n\t */\n\tconstructor(status, message) {\n\t\tthis.status = status;\n\t\tthis.message = message ?? `Error: ${status}`;\n\t}\n\n\ttoString() {\n\t\treturn this.message;\n\t}\n}\n\nexport class Redirect {\n\t/**\n\t * @param {number} status\n\t * @param {string} location\n\t */\n\tconstructor(status, location) {\n\t\tthis.status = status;\n\t\tthis.location = location;\n\t}\n}\n","import { HttpError, Redirect } from '../runtime/control.js';\n\n/**\n * Creates an `HttpError` object with an HTTP status code and an optional message.\n * This object, if thrown during request handling, will cause SvelteKit to\n * return an error response without invoking `handleError`\n * @param {number} status\n * @param {string | undefined} [message]\n */\nexport function error(status, message) {\n\treturn new HttpError(status, message);\n}\n\n/**\n * Creates a `Redirect` object. If thrown during request handling, SvelteKit will\n * return a redirect response.\n * @param {number} status\n * @param {string} location\n */\nexport function redirect(status, location) {\n\tif (isNaN(status) || status < 300 || status > 399) {\n\t\tthrow new Error('Invalid status code');\n\t}\n\n\treturn new Redirect(status, location);\n}\n\n/**\n * Generates a JSON `Response` object from the supplied data.\n * @param {any} data\n * @param {ResponseInit} [init]\n */\nexport function json(data, init) {\n\t// TODO deprecate this in favour of `Response.json` when it's\n\t// more widely supported\n\tconst headers = new Headers(init?.headers);\n\tif (!headers.has('content-type')) {\n\t\theaders.set('content-type', 'application/json');\n\t}\n\n\treturn new Response(JSON.stringify(data), {\n\t\t...init,\n\t\theaders\n\t});\n}\n"],"names":["HttpError","status","message","__publicField","Redirect","location","error","redirect"],"mappings":"wKAAO,MAAMA,CAAU,CAatB,YAAYC,EAAQC,EAAS,CAT7BC,EAAA,YAAO,aAGPA,EAAA,cAOC,KAAK,OAASF,EACd,KAAK,QAAUC,GAAA,KAAAA,EAAW,UAAUD,GACpC,CAED,UAAW,CACV,OAAO,KAAK,OACZ,CACF,CAEO,MAAMG,CAAS,CAKrB,YAAYH,EAAQI,EAAU,CAC7B,KAAK,OAASJ,EACd,KAAK,SAAWI,CAChB,CACF,CCvBO,SAASC,EAAML,EAAQC,EAAS,CACtC,OAAO,IAAIF,EAAUC,EAAQC,CAAO,CACrC,CAQO,SAASK,EAASN,EAAQI,EAAU,CAC1C,GAAI,MAAMJ,CAAM,GAAKA,EAAS,KAAOA,EAAS,IAC7C,MAAM,IAAI,MAAM,qBAAqB,EAGtC,OAAO,IAAIG,EAASH,EAAQI,CAAQ,CACrC"}